version: '3.8'

services:
  haproxy:
    image: haproxy:2.9
    container_name: haproxy-lb
    restart: unless-stopped
    network_mode: host
    volumes:
      - ./haproxy.cfg:/usr/local/etc/haproxy/haproxy.cfg:ro

  mongo-0:
    build: .
    container_name: mongo-0
    restart: unless-stopped
    environment:
      MONGO_PORT: 27030
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_INITDB_ROOT_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_INITDB_ROOT_PASSWORD}
    network_mode: host
    healthcheck:
      test: [ "CMD", "/healthcheck.sh" ]
      interval: 5s
      timeout: 15s
      start_period: 30s
      retries: 10
    volumes:
      - mongo-0:/data/db

  mongo-1:
    build: .
    container_name: mongo-1
    restart: unless-stopped
    environment:
      MONGO_PORT: 27031
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_INITDB_ROOT_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_INITDB_ROOT_PASSWORD}
    network_mode: host
    healthcheck:
      test: [ "CMD", "/healthcheck.sh" ]
      interval: 5s
      timeout: 15s
      start_period: 30s
      retries: 10
    volumes:
      - mongo-1:/data/db

  mongo-2:
    build: .
    container_name: mongo-2
    restart: unless-stopped
    environment:
      MONGO_PORT: 27032
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_INITDB_ROOT_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_INITDB_ROOT_PASSWORD}
    network_mode: host
    healthcheck:
      test: [ "CMD", "/healthcheck.sh" ]
      interval: 5s
      timeout: 15s
      start_period: 30s
      retries: 10
    volumes:
      - mongo-2:/data/db

volumes:
  mongo-0: {}
  mongo-1: {}
  mongo-2: {}
